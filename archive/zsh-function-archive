 zsh function archive
###* GIT COMMANDS ####
 lg () #* use awk to parse out the branches as a choice??
 		{
 		BLUE='\033[0;34m'
 		# RED='\033[0;31m'
 		YELLOW='\033[0;33m'
 		echo -e "$BLUE Input your commit comments "
 		read -r comment
 		git add --all
 		git commit -m "$comment"
 		echo -e "$YELLOW Input the branch name "
 		read -r branch
 		git push -u origin "$branch"
 		}
#* Run the line below in the '.git' directory
#* awk '/branch/{ print $0 }' config | awk -F '"' '{print $2}'  **Grabs macOS and linux from git config**
#* RClone Functions
 odpush () {
 	rclone copy --max-age "$1" --no-traverse "$HOME"/OneDrive od: -P
 }
 odpull () {
 	rclone copy --max-age "$1" --no-traverse od: "$HOME"/OneDrive -P
 }
 gdpush () {	# 	rclone copy --max-age "$1" --no-traverse "$HOME"/Google_Drive gd: -P	# }
 gdpull () {	# 	rclone copy --max-age "$1" --no-traverse gd: "$HOME"/Google_Drive -P	# }
 vmfed() {
 	vmrun -T fusion start /Users/thomaswhilbert/Virtual\ Machines.localized/Fedora 64-bit.vmwarevm/Fedora\ 64-bit.vmx nogui
 	sleep 10
 	ssh fed
 }
 vmcen() {
 	vmrun -T fusion start /Users/thomaswhilbert/Virtual\ Machines.localized/CentosStream9.vmwarevm/CentosStream9.vmx nogui
 	sleep 10
 	#*ssh fed
 }
 vmdeb() {
 	vmrun -T fusion start /Users/thomaswhilbert/Virtual\ Machines.localized/Debian\ 11.x\ 64-bit\ Arm.vmwarevm/Debian\ 11.x\ 64-bit\ Arm.vmx nogui > /dev/null 2>&1 
 	sleep 8
 	ssh deb
 }

#* Create a four word password using powershell
pw4 () {
	BIYellow='\033[1;93m'
	cd $HOME/bin/Password-scripts || exit
	pwsh four-word-passwords.ps1 > pow4.file
	sed -n '6,25p' pow4.file > pow4.file.new
	awk 'NR==1 {print $1}' pow4.file.new | pbcopy
	echo "$BIYellow The passphrase is now in the clipboard."
	rm pow*
	}

* Using walk pull script now
 wp () {
 	cd ~/bin || exit
 	find . -maxdepth 1 -type d \( ! -name . \) -exec bash -c "cd '{}' && git pull" \;
 }

* Virtual Box  ** Keeping for reference **
* See Stack Exchange: https://unix.stackexchange.com/questions/218753/how-to-pass-variables-to-awk-command-with-conditions
* pass variable to awk was the key to getting it to work
 vmh () {
 	VBoxManage list vms | nl
 	VBoxManage list vms | nl > vmz
 	printf "\n"
 	echo '     Choose a VM #' 
 	read -r num
 	vm=$(awk -v num="$num" 'NR==num {print}' < vmz | cut -d \" -f 2)
 	rm vmz
 	VBoxHeadless -s "$vm" &
 	sleep 1
 	printf "\n"
 }
 digab () {
 	dig @10.60.20.20 "$1".asheville.cc.nc.us	
 }	
 hostab () {
 	BLUE='\033[0;34m'
 	addr=$(host "$1".asheville.cc.nc.us)
 	addr2=$(echo "$addr" | cut -d' ' -f4)
 	printf "\n"
 	echo "$BLUE $addr2"
 	}

#* cheat.sh command dictionary ###
 ch () {
 	curl cht.sh/"$1"
 }