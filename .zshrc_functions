#!/bin/bash
#* Zsh Function File
#* Functions ###
lg () #* use awk to parse out the branches as a choice??
		{
		BLUE='\033[0;34m'
		RED='\033[0;31m'
		echo -e "$BLUE Input your commit comments "
		read -r comment
		git add --all
		git commit -m "$comment"
		echo -e "$RED Input the branch name "
		read -r branch
		git push -u origin "$branch"
		}
 #* Run the line below in the '.git' directory
 #* awk '/branch/{ print $0 }' config | awk -F '"' '{print $2}'  **Grabs macOS and linux from git config**


#* diskutil erase function
	### $1 is the volume name
	### $2 is the voluem path
	de () {
		diskutil eraseDisk HFS+ "$1" /dev/disk"$2"
		}

	dku () {
		diskutil unmountDisk /dev/disk"$1"
	}

	mkd () {
		mkdir "$1"
		cd "$1" || exit
		}

#* cheat.sh command dictionary ###
	ch () {
		curl cht.sh/"$1"d
	}

	bak () {
		sudo cp "$1" "$1".bak
	}
   
#* SSH GitHub authentication fix
	ghssh () {
		eval 'ssh-agent -s'
		ssh-add -D
	    cd "$HOME"/.ssh/ || exit
		ssh-add github
		cd "$OLDPWD" || exit
	}

	#* Disk Usage, Sorted by Size
	dus () {
  	    RED='\033[0;31m'
		BLUE='\033[0;34m'
       total=$(du -sh "$1" | cut -f1)
       du -sh "$1"/* | sort -h
       printf "\n"
       echo -e "$BLUE Total Size: $RED $total $BLUE in $RED $(readlink -f "$1")"
   }

	#* Realpath a file
	rpf () {
		realpath "$1" |  pbcopy
	}

	#* RClone Functions
	
	rcco () {
		rclone copy --max-age "$1" --no-traverse "$HOME"/OneDrive od: -P
	}

	rccg () {
	rc copy --max-age "$1" --no-traverse "$HOME"/GoogleDrive/Secure gdS: -P
	}


	#* Nmap get all ips on local network
	ips () {
		nmap -sn 192.168.0.0/24 | awk '/Nmap scan/{gsub(/[()]/,"",$NF); print $NF > "nmap_scanned_ips"}'
		cat nmap_scanned_ips
	}

#* Add color to less
man() {
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    command man "$@"
}

sd() {
		for file in $1; 
		do mv "$file" "$(echo "$file" | tr ' ' '-')" ; 
		done
}

pub () {
	curl -w "\n" ifconfig.me
}

ytd () {
       echo "Paste URL.. "
       read -r "target"
       youtube-dl "$target"
}

getInstaller () {
	cd /Users/thomaswhilbert/OneDrive/macAdmin/Scripts/fetch-installer-pkg/ || exit
	./run-fetch-clean.sh
}

#* Virtual Box  ** Keeping for reference **
#* See Stack Exchange: https://unix.stackexchange.com/questions/218753/how-to-pass-variables-to-awk-command-with-conditions
#* pass variable to awk was the key to getting it to work
# vmh () {
# 	VBoxManage list vms | nl
# 	VBoxManage list vms | nl > vmz
# 	printf "\n"
# 	echo '     Choose a VM #' 
# 	read -r num
# 	vm=$(awk -v num="$num" 'NR==num {print}' < vmz | cut -d \" -f 2)
# 	rm vmz
# 	VBoxHeadless -s "$vm" &
# 	sleep 1
# 	printf "\n"
# }

digab () {
	dig @10.60.20.20 "$1".asheville.cc.nc.us
}
	
getInstaller () {
	cd /Users/thomaswhilbert/OneDrive/macAdmin/Scripts/fetch-installer-pkg/ || exit
	./run-fetch-clean.sh

}

chkSum () {
		echo "$1" "$2" | sha256sum --check
}
#* param 1 is the file signature, param 2 is the target file

wp () {
	cd ~/bin || exit
	find . -maxdepth 1 -type d \( ! -name . \) -exec bash -c "cd '{}' && git pull" \;
}

nfo () {
	BLUE='\033[0;34m' 
NC='\033[0m' # No Color
networksetup -listallnetworkservices 
printf "\n"
echo "$BLUE Choose a network service to dislplay more info"

echo "$NC"
read -r con
printf "\n"
networksetup -getinfo "$con"
}

members () { dscl . -list /Users | while read user; do printf "$user ";
 dsmemberutil checkmembership -U "$user" -G "$*"; done | grep "is a member" | cut -d " " -f 1; 
 }